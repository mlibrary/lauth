---
services:
  app:
    build:
      context: ./
      dockerfile: ./lauth/Dockerfile
      target: development
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    environment:
      - DATABASE_URL=mysql2://lauth:lauth@db.lauth.local:3306/lauth_demo
    hostname: app.lauth.local
    networks:
      default:
        aliases: ["app"]
    ports:
      - "127.0.0.1:2300:2300"
    depends_on:
      mariadb:
        condition: "service_healthy"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://app.lauth.local:2300", "--output", "/dev/null", "--silent" ]
      interval: "5s"
      timeout: "2s"
      retries: 3
    volumes:
      - ./lauth:/lauth/lauth

  proxied-test-app:
    image: python:3
    hostname: proxied-test-app.lauth.local
    networks:
      default:
        aliases: ["proxied-test-app"]
    ports:
      - "127.0.0.1:8008:8008"
    volumes:
      - ./test-site/app:/usr/src/app
    working_dir: "/usr/src/app"
    command: [ "python", "-u", "./proxied.py" ]

  app-dev:
    profiles: ["test"]
    build:
      context: ./
      dockerfile: ./lauth/Dockerfile
      target: development
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    depends_on:
      mariadb:
        condition: "service_healthy"
    volumes:
      - ./lauth:/lauth/lauth
    command: ["rspec"]

  mariadb:
    image: bitnami/mariadb
    hostname: db.lauth.local
    networks:
      default:
        aliases: ["db"]
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mariadb_data:/bitnami/mariadb
      - ./db:/sql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_DATABASE=lauth
      - MARIADB_USER=lauth
      - MARIADB_PASSWORD=lauth
      - TZ=America/Detroit
    healthcheck:
      test: ["CMD", "mariadb-admin", "-u", "root", "status"]
      interval: "10s"
      timeout: "10s"
      retries: 3

  apache:
    build:
      context: ./
      dockerfile: ./apache/Dockerfile
      target: test-server
    ports:
      - "127.0.0.1:8888:80"
    hostname: "www.lauth.local"
    networks:
      default:
        aliases: ["apache"]
    healthcheck:
      test: ["CMD", "http-check", "http://www.lauth.local"]
      interval: "5s"
      timeout: "2s"
      retries: 3

  module:
    profiles: [ "dev" ]
    build:
      context: ./
      dockerfile: ./apache/Dockerfile
      target: tests
    environment:
      - LAUTH_TEST_API_URL=http://mock-api:9000
    volumes:
      - ./apache/client:/lauth/apache/client
      - ./apache/module:/lauth/apache/module
      - build_cache:/lauth/apache/build

  packages:
    profiles: [ "packages" ]
    build:
      context: ./
      dockerfile: ./apache/Dockerfile
      target: packages
    restart: "no"
    volumes:
      - ./apache/packages:/lauth/apache/packages
    command: ["sh", "-c", "cp *.deb /lauth/apache/packages"]

  mock-api:
    profiles: [ "test", "integration" ]
    build:
      context: ./
      dockerfile: ./apache/Dockerfile
      target: tests
    hostname: mock-api.lauth.local
    networks:
      default:
        aliases: ["mock-api"]
    ports:
      - "127.0.0.1:9000:9000"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:9000", "--output", "/dev/null", "--silent" ]
      interval: "10s"
      timeout: "10s"
      retries: 3
    command: ["./http-service", "9000"]

  client-tests:
    profiles: [ "test", "integration" ]
    build:
      context: ./
      dockerfile: ./apache/Dockerfile
      target: client-tests
    depends_on:
      mock-api:
        condition:
          "service_healthy"
    environment:
      - LAUTH_TEST_API_URL=http://mock-api.lauth.local:9000

  test:
    profiles: ["test"]
    build:
      context: ./
      dockerfile: ./test/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    depends_on:
      apache:
        condition: "service_healthy"
      app:
        condition: "service_healthy"
      proxied-test-app:
        condition: "service_started"
      mariadb:
        condition: "service_healthy"
    volumes:
      - ./test:/lauth/test

  dbsetup:
    profiles: ["setup"]
    image: bitnami/mariadb
    depends_on:
      mariadb:
        condition: "service_healthy"
    restart: "no"
    volumes:
      - ./db:/sql
    command:
      - /bin/bash
      - "-c"
      - "/sql/setup.sh -u lauth -p lauth -h db.lauth.local -b lauth_development && \
         /sql/setup.sh -u lauth -p lauth -h db.lauth.local -b lauth_test && \
         /sql/setup.sh -u lauth -p lauth -h db.lauth.local -a -b lauth_demo"

volumes:
  mariadb_data:
  build_cache:

networks:
  default:
